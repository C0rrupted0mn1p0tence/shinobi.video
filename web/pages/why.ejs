<% include blocks/header.ejs %>
<style>
    .table ul li:not(:last-child){margin-bottom:10px}
    .table td{padding:10px}
    .table tr td:first-child{width:30%;font-weight:bold}
    code{color:#231f20}
</style>
<header id="first">
    <div class="_shade">
    <div class="header-content">
        <div class="inner">
            <img style="border-radius:50%" src="libs/assets/icon/apple-touch-icon-152x152.png">
            <h1 class="cursive">Why?</h1>
            <h4 style="text-transform:uppercase">Why go through the effort?</h4>
            <hr>
            <div class="btn-group">
                <a href="#learn" class="btn btn-primary btn-xl page-scroll">Find Out</a>
            </div>
        </div>
        </div>
    </div>
</header>
<section class="bg-primary" id="learn">
    <div class="container">
        <div class="row">
            <div class="col-lg-6 text-center">
                <h2 class="margin-top-0 text-primary">I tried to make ZM work<br><small>I really did</small></h2>
                <p class="text-faded">
                    I want to make a world class CCTV platform. I needed something to start with and my brother suggested ZoneMinder... so I took to the internet for more answers.
                </p>
                <p class="text-faded">
                    ZoneMinder was the primary choice but quickly found it wasn't capable of fufilling the role. It could barely be used for 15 cameras (MJPEG, 2048x1536) on 8 real cores. Not to mention the painful setup, code base, and methods of operation.
                </p>
                <div class="btn-group">
                    <a href="#zm-list" class="btn btn-default btn-xl page-scroll">More about ZoneMinder</a> 
                </div>
            </div>
            <div class="col-lg-6 text-center">
                <img src="libs/assets/panda-sigh.png">
            </div>
        </div>
    </div>
</section>
<section id="zm-list">
    <div class="container">
        <div class="row">
            <div class="col-lg-12 text-center">
                <h2 class="margin-top-0 text-primary">More about ZoneMinder</h2>
                <p>Specific reasons as to why ZoneMinder is inapproriate as a CCTV solution.</p>
                <hr class="primary">
            </div>
        </div>
    </div>
    <div class="container">
      <table class="table" style="font-size:15pt">
<!--
          <thead>
              <tr>
                  <th></th>
              </tr>
          </thead>
-->
          <tbody>
              <% [
                  {
                      title:'MJPEG streams : no good',
                      text:'<ul><li>With MJPEG you are opening a new stream every time you create an image with an MJPEG url. Even if you remove this element it will continue to eat resources from the server and client. Only way to deal with it currently is through an <code>iframe</code>, <code>popup</code>, or <code>hard refresh</code>.</li><li>Shinobi addresses this with <code>Websocket</code> streams. As frames are captured by FFMPEG they are base64 encoded and sent to the client.</li><li>As of January 2017 : Shinobi can output HLS (m3u8) and MJPEG (in an iframe) also.</li></ul>',
                  },
                  {
                      title:'JPEG Storage : mildly acceptable',
                      text:'<ul><li>Saving each frame as a separate file in JPEG format can have a seriously detrimental effect on storage space and the hardware itself. Hardware is more likely to fail under the stress of continuously saving frames to storage.</li><li>Shinobi saves to WebM and MP4 files. While MP4 takes a fair amount of space.. its level of CPU usage during encoding for H.264 streams is just amazing.</li></ul>',
                  },
                  {
                      title:'Using too many languages',
                      text:'<ul><li>You\'ll find that ZoneMinder uses multiple languages to achieve very small results. This probably just because of the time it was written in. ZoneMinder uses Perl, PHP, JavaScript, C++, HTML, CSS, MySQL, and probably more.</li><li>Shinobi uses JavaScript, HTML, CSS, and MySQL. Simple right? It should be.</li></ul>',
                  },
                  {
                      title:'Outdated methods',
                      text:'<ul><li>Continuously hammering the database is not a good idea. Websockets can be used to get real-time data about events. Shinobi uses <code>socket.io</code>.</li><li>For every camera ZoneMinder creates a new process every time a viewer opens a stream. 1 Stream = 1 Process. <strong>Shinobi uses 1 process per camera for all viewers.</strong></li></ul>',
                  },
                  {
                      title:'General Issues',
                      text:'<ul><li>No Audio recording</li><li>No ability to re-stream</li></ul>',
                  },
              ].forEach(function(v,n){ %>
              <tr>
                  <td><%-v.title%></td>
                  <td><%-v.text%></td>
              </tr>
           <%  }) %>
          </tbody>
      </table>
        <blockquote>
            <img src="libs/assets/moe.png" style="width:350px" class="pull-right">
            <p>As much as ZoneMinder is godly among CCTV applications. It only has this praise because no other solutions existed. If they did they were a sliver in ZoneMinder's shadow. At first I tried to fix the issues ZoneMinder was having by myself as I was using the <code>video</code> branch which was not updated with the rest of ZoneMinder. I needed MP4 recording.</p>
            <p>The more I worked on ZoneMinder, the more bitter I became. Issues getting ignored for more than 1 year should have been the hint when I first started. Due to this, and many other reasons not mentioned, I believe ZoneMinder is dying. I don't have enough time to clean up such a mess.</p>
            <p>So I began Shinobi.</p>
            <p><small>Moe Alam</small></p>
        </blockquote>
    </div>
  </section>
<% include blocks/footer.ejs %>