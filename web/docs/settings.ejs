<% var Title='Settings'; %>
<% //draw table elements
var draw=function(v,n){
          if(v.possible instanceof Array){
              v.possible_draw='';
              v.possible.forEach(function(b,m){
                  v.possible_draw+='<li class="possible"><b>'+b.name+' : </b>'+b.info+'</li>';
              })
          }else{
              v.possible_draw=v.possible;
          }
        %>
      <tr>
      <td><%-v.field%></td>
      <td><%-v.description%><% if(typeof v.possible==='string'&&v.possible!==''){ %><br><b>Possible : </b><%-v.possible_draw%><% }if(v.possible instanceof Array){ %><ul><%-v.possible_draw%></ul><% } %></td>
      <td><%-v.default%></td>
      <td><%-v.example%></td>
      </tr>
<% } %>
<% include blocks/header.ejs %>
<body class="body-blue body-dark">
    <div class="page-wrapper">
        <!-- ******Header****** -->
        <header id="header" class="header">
            <div class="container">
                <% include blocks/branding.ejs %>
            </div><!--//container-->
        </header><!--//header-->
        <div class="doc-wrapper">
            <div class="container">
                <div id="doc-header" class="doc-header text-center">
                    <h1 class="doc-title"><span aria-hidden="true" class="icon fa fa-wrench"></span> <%= Title %></h1>
                </div><!--//doc-header-->
                <div class="doc-body">
                    <div class="doc-content">
                        <div class="content-inner">
                            <section id="supported-cameras" class="doc-section">
                                <div class="section-block">
<h1 class="block-title"><a id="input-methods-input-type" class="anchor" href="#input-methods-input-type" aria-hidden="true"></a>Monitor Settings</h1>
<h3 class="block-title question"><a id="identity" class="anchor" href="#identity" aria-hidden="true"></a>Identity</h3>
<table class="table table-striped table-inverse">
  <tbody>
<tr>
<th>Field</th>
<th>Description</th>
<th>Default</th>
<th>Example</th>
</tr>
<% [
          {
              field:'Mode',
              description:'This is the primary task of the monitor.',
              default:'Disabled',
              example:'',
              possible:[
                  {name:'Disabled',info:'Inactive monitor, no process will be created in this mode.'},
                  {name:'Watch-Only',info:'Monitor will only stream, no recording will occur unless otherwise ordered by API or Detector.'},
                  {name:'Record',info:'Continuous Recording. Segments are made every 15 minutes by default.'},
              ],
          },
          {
              field:'Monitor ID',
              description:'This is a non-changeable identifier for the monitor. You can duplicate a monitor by double clicking the Monitor ID and changing it.',
              default:'<i>Provided by Server</i>',
              example:'awFST99MGn',
              possible:'',
          },
          {
              field:'Name',
              description:'This is the human-readable display name for the monitor.',
              default:'',
              example:'Bunny',
              possible:'',
          },
          {
              field:'Retry Connection',
              description:'The number of times to retry for network connection between the server and camera before setting the monitor to Disabled. No decimals.',
              default:'10',
              example:'100000',
              possible:'',
          },
      ].forEach(draw) %>

</tbody></table>
</div>
<div class="section-block">
<h3 class="block-title question"><a id="input" class="anchor" href="#input" aria-hidden="true"></a>Input</h3>
<table class="table table-striped table-inverse">
  <tbody>
<tr>
<th>Field</th>
<th>Description</th>
<th>Default</th>
<th>Example</th>
</tr>
<% [
          {
              field:'Input Type',
              description:'The method that will used to consume the video stream.',
              default:'JPEG',
              example:'',
              possible:[
                  {name:'JPEG',info:'Reading snapshots from a URL and making a stream and/or video from them.'},
                  {name:'MJPEG',info:'Similar to JPEG except the frame handling is done by FFMPEG, not Shinobi.'},
                  {name:'H.264',info:'Reading a high quality video streas that sometimes include audio.'},
                  {name:'Local',info:'Reading Capture Cards, Webcams, or Integrated Cameras.'},
                  {name:'Shinobi Streamer',info:'Continuous Recording. Segments are made every 15 minutes by default.'},
              ],
          },
          {
              field:'Connection Type',
              description:'The protocol that will used to consume the video stream.',
              default:'HTTP',
              example:'',
              possible:[
                  {name:'HTTP',info:'Standard connection method.'},
                  {name:'HTTPS',info:'Standard connection method with SSL.'},
                  {name:'RTSP',info:'Real Time Streaming Protocol'},
                  {name:'UDP',info:'Near restrictionless data transfer method.'},
              ],
          },
          {
              field:'Username',
              description:'The user login for your camera',
              default:'',
              example:'',
              possible:'',
          },
          {
              field:'Password',
              description:'The password for your camera',
              default:'',
              example:'',
              possible:'',
          },
          {
              field:'Host',
              description:'Connection address',
              default:'',
              example:'111.111.111.111',
              possible:'',
          },
          {
              field:'Port',
              description:'Port number that your camera is streaming out on.',
              default:'80',
              example:'554',
              possible:'1-65535',
          },
          {
              field:'Path',
              description:'The password for your camera',
              default:'',
              example:'/videostream.cgi',
              possible:'',
          },{
              field:'Analyzation Duration',
              description:'Specify how many microseconds are analyzed to probe the input. Set to 10000 if you are using RTSP and having stream issues.',
              default:'',
              example:'10000',
              possible:'',
          },
          {
              field:'RTSP Transport',
              description:'The password for your camera',
              default:'',
              example:'',
              possible:[
                  {name:'Auto',info:'Let FFMPEG decide. Normally it will try UDP first.'},
                  {name:'TCP',info:'Set it to this if UDP starts giving undesired results.'},
                  {name:'UDP',info:'FFMPEG tries this first.'},
                  {name:'HTTP',info:'Standard connection method.'},
              ],
          },
      ].forEach(draw) %>

</tbody></table>

                                </div><!--//section-block-->
                                <div class="section-block">
<h3 class="block-title question"><a id="stream" class="anchor" href="#stream" aria-hidden="true"></a>Stream</h3>
<table class="table table-striped table-inverse">
  <tbody>
<tr>
<th>Field</th>
<th>Description</th>
<th>Default</th>
<th>Example</th>
</tr>
<% [
          {
              field:'Stream  Type',
              description:'The method that will used to consume the video stream.',
              default:'Base64',
              example:'',
              possible:[
                  {name:'MJPEG',info:'Standard Motion JPEG image. No audio.'},
                  {name:'HLS',info:'Similar method to facebook live streams. <b>Includes audio</b> if input provides it. There is a delay of about 4-6 seconds because this method records segments then pushes them to the client rather than push as while it creates them.'},
                  {name:'Base64',info:'Sending Base64 encoded frames over WebSocket. This avoids caching but there is no audio.'},
              ],
          },
          {
              field:'Check Signal Interval',
              description:'How often your client will check each stream to see if it is alive. This is calculated in minutes.',
              default:'10',
              example:'',
              possible:'',
          },
          {
              field:'Log Signal Event',
              description:'This is for the client side only. It will display in the log thread when client side signal checks occur.',
              default:'No',
              example:'',
              possible:[
                  {name:'No',info:'No signal check.'},
                  {name:'Yes',info:'Check signal based on the number of minutes provided.'},
              ],
          },
          {
              field:'Quality',
              description:'Low number means higher quality. Higher number means less quality.',
              default:'15',
              example:'1',
              possible:'1-23',
          },
          {
              field:'Rate (FPS)',
              description:'The speed in which frames are displayed to clients. Frames Per Second. Be aware there is no default. This can lead to high bandwidth usage.',
              default:'',
              example:'2',
              possible:'',
          },
          {
              field:'Height',
              description:'Height of the stream image.',
              default:'640',
              example:'1280',
              possible:'',
          },
          {
              field:'Width',
              description:'Height of the stream image.',
              default:'480',
              example:'720',
              possible:'',
          },{
              field:'Video Filter',
              description:'Place FFMPEG video filters in this box to affect the streaming portion. No spaces.',
              default:'',
              example:'',
              possible:'',
          },
      ].forEach(draw) %>

</tbody></table>

                                </div><!--//section-block-->
                                <div class="section-block">
<h3 class="block-title question"><a id="record" class="anchor" href="#record" aria-hidden="true"></a>Record</h3>
<table class="table table-striped table-inverse">
  <tbody>
<tr>
<th>Field</th>
<th>Description</th>
<th>Default</th>
<th>Example</th>
</tr>
<% [
          {
              field:'Record File Type',
              description:'The file type for your .',
              default:'Base64',
              example:'',
              possible:[
                  {name:'MP4',info:'This file type is playable is almost all modern web browsers, that includes mobile. The filesize just tends to be gigantic unless you lower the quality.'},
                  {name:'HLS',info:''},
              ],
          },
          {
              field:'Video Codec',
              description:'This is for the client side only. It will display in the log thread when client side signal checks occur.',
              default:'No',
              example:'',
              possible:[
                  {name:'No',info:'No signal check.'},
                  {name:'Yes',info:'Check signal based on the number of minutes provided.'},
              ],
          },
          {
              field:'Quality',
              description:'Low number means higher quality. Higher number means less quality.',
              default:'15',
              example:'1',
              possible:'1-23',
          },
          {
              field:'Preset',
              description:'Preset flag for certain video encoders. If you find your camera is crashing every few seconds : try leaving it blank.',
              default:'',
              example:'ultrafast',
              possible:'',
          },
          {
              field:'Video Record Rate (FPS)',
              description:'The speed in which frames are recorded to files. Frames Per Second. Be aware there is no default. This can lead to large files.',
              default:'',
              example:'2',
              possible:'',
          },
          {
              field:'Record Height',
              description:'Height of the stream image.',
              default:'640',
              example:'1280',
              possible:'',
          },
          {
              field:'Record Width',
              description:'Height of the stream image.',
              default:'480',
              example:'720',
              possible:'',
          },{
              field:'Recording Segment Interval',
              description:'In minutes. When to slice off and start a new video file.',
              default:'15',
              example:'60',
              possible:'',
          },
          {
              field:'Double Quote Directory',
              description:'Some directories have spaces depending on how you setup your OS.',
              default:'No',
              example:'',
              possible:[
                  {name:'No',info:'No is the default.'},
                  {name:'Yes',info:'Using this may crash some cameras.'},
              ],
          },
          {
              field:'Record Video Filter',
              description:'Place FFMPEG video filters in this box to affect the recording portion. No spaces.',
              default:'',
              example:'',
              possible:'',
          },
      ].forEach(draw) %>

</tbody></table>

                                </div><!--//section-block-->
                                <div class="section-block">
<h3 class="block-title question"><a id="timestamp" class="anchor" href="#timestamp" aria-hidden="true"></a>Timestamp</h3>
<table class="table table-striped table-inverse">
  <tbody>
<tr>
<th>Field</th>
<th>Description</th>
<th>Default</th>
<th>Example</th>
</tr>
<% [
          {
              field:'Font Path',
              description:'Font File to style your timestamp.',
              default:'/usr/share/fonts/truetype/freefont/FreeSans.ttf',
              example:'',
              possible:'',
          },
          {
              field:'Font Size',
              description:'Font size in pt.',
              default:'10',
              example:'',
              possible:'',
          },
          {
              field:'Text Color',
              description:'Timstamp text color.',
              default:'white',
              example:'',
              possible:'',
          },
          {
              field:'Text Box Color',
              description:'Timstamp backdrop color.',
              default:'0x00000000@1',
              example:'',
              possible:'',
          },
          {
              field:'Position X',
              description:'Horiztonal Position of Timestamp',
              default:'(w-tw)/2',
              example:'',
              possible:'',
          },
          {
              field:'Position Y',
              description:'Vertical Position of Timestamp',
              default:'0',
              example:'',
              possible:'',
          },
      ].forEach(draw) %>

</tbody></table>

                                </div><!--//section-block-->
                                <div class="section-block">
<h3 class="block-title question"><a id="custom" class="anchor" href="#custom" aria-hidden="true"></a>Custom</h3>
<table class="table table-striped table-inverse">
  <tbody>
<tr>
<th>Field</th>
<th>Description</th>
<th>Default</th>
<th>Example</th>
</tr>
<% [
          {
              field:'Input Flags',
              description:'Custom Flags that bind to the Input of the FFMPEG process.',
              default:'',
              example:'',
              possible:'',
          },
          {
              field:'Detector Flags',
              description:'Custom Flags that bind to the stream Detector uses for analyzation.',
              default:'',
              example:'',
              possible:'',
          },
          {
              field:'Stream Flags',
              description:'Custom Flags that bind to the Stream (client side view) of the FFMPEG process.',
              default:'',
              example:'',
              possible:'',
          },
          {
              field:'Output Method',
              description:'Add a custom output like JPEG frames or send data straight to another server.',
              default:'',
              example:'',
              possible:'',
          },
      ].forEach(draw) %>

</tbody></table>

                                </div><!--//section-block-->
                                <div class="section-block">
<h3 class="block-title question"><a id="logging" class="anchor" href="#logging" aria-hidden="true"></a>Logging</h3>
<table class="table table-striped table-inverse">
  <tbody>
<tr>
<th>Field</th>
<th>Description</th>
<th>Default</th>
<th>Example</th>
</tr>
<% [
          {
              field:'Log Level',
              description:'The amount of data to provide while doing the job.',
              default:'No',
              example:'',
              possible:[
                  {name:'Silent',info:'None. This will silence all logging.'},
                  {name:'Fatal',info:'Display only fatal errors.'},
                  {name:'On Error',info:'Display all important errors. Note : this doesn\'t always show important information.'},
                  {name:'All Warnings',info:'Display all warnings. Use this if you can\'t find out what\'s wrong with your camera.'},
                  {name:'Debug',info:'Show all information FFMPEG can provide on STDERR while doing the job.'},
              ],
          },
          {
              field:'Save Log in SQL',
              description:'I suggested using this with caution as FFMPEG likes to throw up superfluous data at times which can lead to a lot of database rows.',
              default:'No',
              example:'',
              possible:[
                  {name:'No',info:'No is the default.'},
                  {name:'Yes',info:'Do this if you are having recurring issues only.'},
              ],
          },
      ].forEach(draw) %>

</tbody></table>

                                </div><!--//section-block-->
                           </section>
                        </div><!--//content-inner-->
                    </div><!--//doc-content-->
                    <div class="doc-sidebar">
                        <nav id="doc-nav">
                            <ul id="doc-menu" class="nav doc-menu hidden-xs" data-spy="affix">
                                <li>
                                    <a class="scrollto" href="#input-methods-input-type">Monitor Settings</a>
                                    <ul class="nav doc-sub-menu">
                                    <li><a class="scrollto" href="#identity">Identity</a></li>
                                    <li><a class="scrollto" href="#input">Input</a></li>
                                    <li><a class="scrollto" href="#stream">Stream</a></li>
                                    <li><a class="scrollto" href="#record">Record</a></li>
                                    <li><a class="scrollto" href="#timestamp">Timestamp</a></li>
                                    <li><a class="scrollto" href="#custom">Custom</a></li>
                                    <li><a class="scrollto" href="#logging">Logging</a></li>
                                </ul></li>
                            </ul><!--//doc-menu-->
                        </nav>
                    </div><!--//doc-sidebar-->
                </div><!--//doc-body-->              
            </div><!--//container-->
        </div><!--//doc-wrapper-->
    </div><!--//page-wrapper-->
<% include blocks/footer.ejs %>
</body>
</html> 

